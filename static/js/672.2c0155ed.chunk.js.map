{"version":3,"file":"static/js/672.2c0155ed.chunk.js","mappings":"iMACA,EAA0B,yBAA1B,EAA4D,wBAA5D,EAAmG,8BAAnG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yBAAjN,EAAgP,qBAAhP,EAA4Q,sB,6BCc5Q,EAXmB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,iBAAKC,UAAWC,EAAW,IAAMA,EAAjC,WACE,gBAAKC,IAAKL,EAAMM,IAAKH,UAAWC,EAAOG,IAAI,eAC3C,SAAC,KAAD,CAASJ,UAAWC,EAAQI,GAAIP,EAAhC,SAAuCD,EAAMS,WCEnD,EARgB,SAACT,GACf,OACE,gBAAKG,UAAWC,EAAhB,UACE,gBAAKD,UAAWC,EAAhB,SAA4BJ,EAAMU,a,uCCGlCC,GAAYC,EAAAA,EAAAA,IAAiB,IAuC7BC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,EAZL,SAACd,GACtB,OACE,iBAAMgB,SAAUhB,EAAMiB,aAAtB,UACE,4BACE,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUX,KAAK,iBAAiBY,YAAY,qBAC9DC,SAAU,CAACC,EAAAA,GAAUZ,MACrB,6CAOR,EAvCgB,SAACX,GACf,IAAIwB,EAAkBxB,EAAMyB,YACzBC,KAAK,SAAAC,GAAI,OAAI,SAAC,EAAD,CAAYlB,KAAMkB,EAAKlB,KAAMP,GAAIyB,EAAKzB,GAAII,IAAKqB,EAAKrB,KAAUqB,EAAKzB,OAE/E0B,EAAmB5B,EAAM6B,SAC1BH,KAAK,SAAAhB,GAAO,OAAI,SAAC,EAAD,CAASA,QAASA,EAAQA,QAASR,GAAIQ,EAAQR,IAASQ,EAAQR,OAQjF,OACA,iBAAKC,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGoB,KAEH,gBAAKrB,UAAWC,EAAhB,SACGwB,KAEH,SAACf,EAAD,CAAqBG,SAbL,SAACc,GACnBC,QAAQC,IAAIF,EAAOG,gBACnBjC,EAAMkC,WAAWJ,EAAOG,uBCM5B,GAAeE,EAAAA,EAAAA,KACbC,EAAAA,EAAAA,KAhBoB,SAACC,GACrB,MAAO,CACLZ,YAAaY,EAAMC,aAAab,YAChCI,SAAUQ,EAAMC,aAAaC,iBAGR,SAACC,GACxB,MAAO,CACLN,WAAY,SAACD,GACX,IAAIQ,GAASC,EAAAA,EAAAA,GAAwBT,GACrCO,EAASC,QAObE,EAAAA,EAFF,CAGEC","sources":["webpack://1-first/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__+M+Zo\",\"dialog\":\"Dialogs_dialog__NkKeJ\",\"dialogsItems\":\"Dialogs_dialogsItems__-2cB+\",\"active\":\"Dialogs_active__2WZRV\",\"messages\":\"Dialogs_messages__286Of\",\"message\":\"Dialogs_message__YkZco\",\"ava\":\"Dialogs_ava__MkDDn\",\"name\":\"Dialogs_name__t73wW\"};","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <img src={props.ava} className={s.ava} alt='FriendAva'></img>\r\n      <NavLink className={s.name} to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DialogItem;\r\n","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={s.messages}>\r\n      <div className={s.message}>{props.message}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import s from \"./Dialogs.module.css\";\r\nimport React from \"react\";\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from \"./Message/Message\";\r\nimport { Field } from \"redux-form\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { TextArea } from \"../common/FormControls/FormsControls\";\r\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\r\n\r\nconst maxLength = maxLengthCreator(10);\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogsData\r\n    .map( elem => <DialogItem name={elem.name} id={elem.id} ava={elem.ava} key={elem.id} />)\r\n\r\n  let messagesElements = props.messages\r\n    .map( message => <Message message={message.message} id={message.id} key={message.id}/>)\r\n\r\n    \r\n  let addNewMessage = (values) => {\r\n    console.log(values.newMessageBody);\r\n    props.addMessage(values.newMessageBody);\r\n  }\r\n\r\n    return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messagesElements}\r\n      </div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={TextArea} name='newMessageBody' placeholder=\"Write your message\"\r\n        validate={[required, maxLength]}/>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm'})(AddMessageForm)\r\nexport default Dialogs;\r\n","\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  addMessageActionCreator,\r\n} from \"../../Redux/dialogs-reducer\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsData: state.messagesPage.dialogsData,\r\n    messages: state.messagesPage.messagesData,\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageBody) => {\r\n      let action = addMessageActionCreator(newMessageBody);\r\n      dispatch(action);\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps,mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)\r\n"],"names":["props","path","id","className","s","src","ava","alt","to","name","message","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","dialogsElements","dialogsData","map","elem","messagesElements","messages","values","console","log","newMessageBody","addMessage","compose","connect","state","messagesPage","messagesData","dispatch","action","addMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}